{"version":3,"sources":["shared/Form/Form.jsx","shared/Label/Label.jsx","shared/Input/Input.jsx","shared/Button/Button.jsx","components/BudgetForm/BudgetForm.jsx","helpers/helpers.js","redux/selectors/selector.js","components/BudgetForm/BudgetFormContainer.jsx","redux/BudgetInput/budgetInputActions.js","redux/constants.js","redux/BudgetValue/budgetValueActions.js","components/ExpenseForm/ExpenseForm.jsx","components/ExpenseForm/ExpenseFormContainer.jsx","redux/CurrentExpense/currentExpenseActions.js","redux/Expenses/expensesActions.js","components/ExpensesTable/ExpensesTable.jsx","components/ExpensesTable/ExpensesTableContainer.jsx","components/Stat/Stat.jsx","components/Values/Values.jsx","components/Values/ValuesContainer.jsx","components/App/App.jsx","components/App/AppContainer.jsx","redux/BudgetInput/budgetInputReducer.js","redux/CurrentExpense/currentExpenseReducer.js","redux/Expenses/expensesReducer.js","redux/BudgetValue/budgetValueReducer.js","redux/store/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","defaultProps","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","BudgetForm","budgetInput","changeBudget","clearInput","addBudget","evt","preventDefault","toast","getBudget","state","getCurrentExpense","currentExpense","getCurrentExpenseName","getCurrentExpenseAmount","amount","getAllExpenses","expenses","getBudgetValue","budgetValue","getTotalExpenses","createSelector","reduce","total","expense","Number","getBalance","budget","getExpensesLength","length","mapDispatchToProps","payload","target","connect","ExpenseForm","changeExpenseName","changeExpenseAmount","addExpense","balance","id","shortid","generate","newExpense","Table","table","ExpensesTable","deleteExpense","map","key","Container","div","isPositive","p","Value","Stat","section","Values","App","expensesLength","budgetInputReducer","action","combineReducers","initialData","expensesReducer","filter","el","budgetValueReducer","rootReducer","currentExpenseReducer","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4cd289.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.defaultProps = {\r\n  onSubmit: () => null,\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  customStyles: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({ type, value, onChange, name }) => (\r\n  <StyledInput type={type} value={value} onChange={onChange} name={name} />\r\n);\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  value: '',\r\n  onChange: () => null,\r\n  name: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type, label, onClick }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  label: '',\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from '../../shared/Form/Form';\r\nimport Label from '../../shared/Label/Label';\r\nimport Input from '../../shared/Input/Input';\r\nimport Button from '../../shared/Button/Button';\r\nimport { notifyEmptyBalance } from '../../helpers/helpers';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nconst BudgetForm = ({ budgetInput, changeBudget, clearInput, addBudget }) => {\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (budgetInput && budgetInput !== '0') {\r\n      addBudget(budgetInput);\r\n    } else {\r\n      notifyEmptyBalance();\r\n    }\r\n    clearInput();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter your total budget\r\n        <Input type=\"number\" value={budgetInput} onChange={changeBudget} />\r\n      </Label>\r\n      <Button label=\"Save\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nBudgetForm.propTypes = {\r\n  budgetInput: PropTypes.string.isRequired,\r\n  changeBudget: PropTypes.func.isRequired,\r\n  clearInput: PropTypes.func.isRequired,\r\n  addBudget: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BudgetForm;\r\n","import { toast } from 'react-toastify';\n\nconst notifySumMoreBalance = () => toast('Сумма превышает баланс!');\nconst notifyEmptyInput = () => toast('Введите сумму расходов');\nconst notifyEmptyBalance = () => toast('Введите бюджет');\n\nexport { notifySumMoreBalance, notifyEmptyInput, notifyEmptyBalance };\n","import { createSelector } from 'reselect';\n\nexport const getBudget = state => state.budgetInput;\nexport const getCurrentExpense = state => state.currentExpense;\nexport const getCurrentExpenseName = state => state.currentExpense.name;\nexport const getCurrentExpenseAmount = state => state.currentExpense.amount;\nexport const getAllExpenses = state => state.expenses;\nexport const getBudgetValue = state => state.budgetValue;\n\nexport const getTotalExpenses = createSelector(getAllExpenses, expenses => {\n  return expenses.reduce((total, expense) => total + Number(expense.amount), 0);\n});\n\nexport const getBalance = createSelector(\n  getBudgetValue,\n  getTotalExpenses,\n  (budget, expenses) => Number(budget) - Number(expenses),\n);\n\nexport const getExpensesLength = createSelector(\n  getAllExpenses,\n  expenses => expenses.length,\n);\n","import { connect } from 'react-redux';\r\nimport BudgetForm from './BudgetForm';\r\nimport { getBudget } from '../../redux/selectors/selector';\r\nimport {\r\n  changeBudget,\r\n  clearInput,\r\n} from '../../redux/BudgetInput/budgetInputActions';\r\nimport addBudget from '../../redux/BudgetValue/budgetValueActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  budgetInput: getBudget(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeBudget,\r\n  clearInput,\r\n  addBudget,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetForm);\r\n","import { CHANGE_BUDGET_INPUT, CLEAR_INPUT } from '../constants';\n\nexport const changeBudget = evt => ({\n  type: CHANGE_BUDGET_INPUT,\n  payload: evt.target.value,\n});\n\nexport const clearInput = () => ({\n  type: CLEAR_INPUT,\n});\n","export const CHANGE_BUDGET_INPUT = 'CHANGE_BUDGET_INPUT';\nexport const CLEAR_INPUT = 'CLEAR_INPUT';\n\nexport const ADD_BUDGET = 'ADD_BUDGET';\n\nexport const CHANGE_EXPENSE_NAME = 'CHANGE_EXPENSE_NAME';\nexport const CHANGE_EXPENSE_AMOUNT = 'CHANGE_EXPENSE_AMOUNT';\n\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\n","import { ADD_BUDGET } from '../constants';\n\nconst addBudget = value => ({\n  type: ADD_BUDGET,\n  payload: +value,\n});\n\nexport default addBudget;\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Form from '../../shared/Form/Form';\r\nimport Label from '../../shared/Label/Label';\r\nimport Input from '../../shared/Input/Input';\r\nimport Button from '../../shared/Button/Button';\r\nimport { notifySumMoreBalance, notifyEmptyInput } from '../../helpers/helpers';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst ExpenseForm = ({\r\n  name,\r\n  amount,\r\n  currentExpense,\r\n  changeExpenseName,\r\n  changeExpenseAmount,\r\n  addExpense,\r\n  clearInput,\r\n  balance,\r\n}) => {\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const expense = {\r\n      ...currentExpense,\r\n      id: shortid.generate(),\r\n    };\r\n    if (amount && amount !== '0') {\r\n      if (amount <= balance) {\r\n        addExpense(expense);\r\n        clearInput();\r\n      } else {\r\n        notifySumMoreBalance();\r\n      }\r\n    } else {\r\n      notifyEmptyInput();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={changeExpenseName}\r\n        />\r\n      </Label>\r\n      <Label customStyles={labelStyles}>\r\n        Enter expense amount\r\n        <Input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={amount}\r\n          onChange={changeExpenseAmount}\r\n        />\r\n      </Label>\r\n\r\n      <Button label=\"Add\" type=\"submit\" />\r\n      <ToastContainer />\r\n    </Form>\r\n  );\r\n};\r\n\r\nExpenseForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currentExpense: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  changeExpenseName: PropTypes.func.isRequired,\r\n  changeExpenseAmount: PropTypes.func.isRequired,\r\n  addExpense: PropTypes.func.isRequired,\r\n  clearInput: PropTypes.func.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport {\r\n  changeExpenseName,\r\n  changeExpenseAmount,\r\n  clearInput,\r\n} from '../../redux/CurrentExpense/currentExpenseActions';\r\nimport {\r\n  getCurrentExpenseName,\r\n  getCurrentExpenseAmount,\r\n  getCurrentExpense,\r\n  getBalance,\r\n} from '../../redux/selectors/selector';\r\nimport { addExpense } from '../../redux/Expenses/expensesActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  name: getCurrentExpenseName(state),\r\n  amount: getCurrentExpenseAmount(state),\r\n  currentExpense: getCurrentExpense(state),\r\n  balance: getBalance(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeExpenseName,\r\n  changeExpenseAmount,\r\n  clearInput,\r\n  addExpense,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\r\n","import {\n  CHANGE_EXPENSE_NAME,\n  CHANGE_EXPENSE_AMOUNT,\n  CLEAR_INPUT,\n} from '../constants';\n\nexport const changeExpenseName = evt => ({\n  type: CHANGE_EXPENSE_NAME,\n  payload: evt.target.value,\n});\n\nexport const changeExpenseAmount = evt => ({\n  type: CHANGE_EXPENSE_AMOUNT,\n  payload: evt.target.value,\n});\n\nexport const clearInput = () => ({\n  type: CLEAR_INPUT,\n});\n","import { ADD_EXPENSE, DELETE_EXPENSE } from '../constants';\n\nexport const addExpense = newExpense => ({\n  type: ADD_EXPENSE,\n  payload: newExpense,\n});\n\nexport const deleteExpense = id => ({\n  type: DELETE_EXPENSE,\n  payload: id,\n});\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../../shared/Button/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses, deleteExpense }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {expenses.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => deleteExpense(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  expenses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  deleteExpense: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ExpensesTable;\r\n","import { connect } from 'react-redux';\r\nimport ExpensesTable from './ExpensesTable';\r\nimport { deleteExpense } from '../../redux/Expenses/expensesActions';\r\nimport { getAllExpenses } from '../../redux/selectors/selector';\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: getAllExpenses(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteExpense,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: false,\r\n};\r\n\r\nStat.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  isPositive: PropTypes.bool,\r\n};\r\n\r\nexport default Stat;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Stat from '../Stat/Stat';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budgetValue, expenses, balance }) => (\r\n  <Container>\r\n    <Stat label=\"Budget\" value={budgetValue} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} />\r\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budgetValue: PropTypes.number.isRequired,\r\n  expenses: PropTypes.number.isRequired,\r\n  balance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Values;\r\n","import { connect } from 'react-redux';\r\nimport Values from './Values';\r\nimport {\r\n  getBudgetValue,\r\n  getTotalExpenses,\r\n  getBalance,\r\n} from '../../redux/selectors/selector';\r\n\r\nconst mapStateToProps = state => ({\r\n  budgetValue: getBudgetValue(state),\r\n  expenses: getTotalExpenses(state),\r\n  balance: getBalance(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Values);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport BudgetForm from '../BudgetForm/BudgetFormContainer';\r\nimport ExpenseForm from '../ExpenseForm/ExpenseFormContainer';\r\nimport ExpensesTable from '../ExpensesTable/ExpensesTableContainer';\r\nimport Values from '../Values/ValuesContainer';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = ({ expensesLength }) => (\r\n  <Container>\r\n    <BudgetForm />\r\n    <Values />\r\n    <ExpenseForm />\r\n    {expensesLength > 0 && <ExpensesTable />}\r\n  </Container>\r\n);\r\n\r\nApp.propTypes = {\r\n  expensesLength: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport { getExpensesLength } from '../../redux/selectors/selector';\r\n\r\nconst mapStateToProps = state => ({\r\n  expensesLength: getExpensesLength(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { CHANGE_BUDGET_INPUT, CLEAR_INPUT } from '../constants';\n\nconst budgetInputReducer = (state = '', action) => {\n  switch (action.type) {\n    case CHANGE_BUDGET_INPUT:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default budgetInputReducer;\n","import { combineReducers } from 'redux';\nimport {\n  CHANGE_EXPENSE_NAME,\n  CHANGE_EXPENSE_AMOUNT,\n  CLEAR_INPUT,\n} from '../constants';\n\nconst nameReducer = (state = '', action) => {\n  switch (action.type) {\n    case CHANGE_EXPENSE_NAME:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst amountReducer = (state = '', action) => {\n  switch (action.type) {\n    case CHANGE_EXPENSE_AMOUNT:\n      return action.payload;\n    case CLEAR_INPUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  name: nameReducer,\n  amount: amountReducer,\n});\n","import { ADD_EXPENSE, DELETE_EXPENSE } from '../constants';\n\nconst initialData = [];\n\nconst expensesReducer = (state = initialData, action) => {\n  switch (action.type) {\n    case ADD_EXPENSE:\n      return [...state, action.payload];\n    case DELETE_EXPENSE:\n      return state.filter(el => el.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import { ADD_BUDGET } from '../constants';\n\nconst budgetValueReducer = (state = 0, action) => {\n  switch (action.type) {\n    case ADD_BUDGET:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default budgetValueReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport budgetInputReducer from '../BudgetInput/budgetInputReducer';\nimport currentExpenseReducer from '../CurrentExpense/currentExpenseReducer';\nimport expensesReducer from '../Expenses/expensesReducer';\nimport budgetValueReducer from '../BudgetValue/budgetValueReducer';\n\nconst rootReducer = combineReducers({\n  budgetInput: budgetInputReducer,\n  budgetValue: budgetValueReducer,\n  currentExpense: currentExpenseReducer,\n  expenses: expensesReducer,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/AppContainer';\nimport store from './redux/store/store';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}